name: Test Suite

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18, 20]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: 'parking-finder/package-lock.json'
        
    - name: Install dependencies
      run: |
        cd parking-finder
        npm ci
        
    - name: Run unit tests with coverage
      run: |
        cd parking-finder
        npm run test:run -- --coverage
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./parking-finder/coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

  integration-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'parking-finder/package-lock.json'
        
    - name: Install dependencies
      run: |
        cd parking-finder
        npm ci
        
    - name: Run integration tests
      run: |
        cd parking-finder
        npm run test:integration

  performance-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'parking-finder/package-lock.json'
        
    - name: Install dependencies
      run: |
        cd parking-finder
        npm ci
        
    - name: Run performance tests
      run: |
        cd parking-finder
        npm run test:performance

  e2e-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        browser: [chromium, firefox, webkit]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'parking-finder/package-lock.json'
        
    - name: Install dependencies
      run: |
        cd parking-finder
        npm ci
        
    - name: Install Playwright browsers
      run: |
        cd parking-finder
        npx playwright install --with-deps ${{ matrix.browser }}
        
    - name: Build application
      run: |
        cd parking-finder
        npm run build
        
    - name: Run E2E tests on ${{ matrix.browser }}
      run: |
        cd parking-finder
        npx playwright test --project=${{ matrix.browser }}
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report-${{ matrix.browser }}
        path: parking-finder/playwright-report/
        retention-days: 30

  accessibility-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'parking-finder/package-lock.json'
        
    - name: Install dependencies
      run: |
        cd parking-finder
        npm ci
        
    - name: Install Playwright browsers
      run: |
        cd parking-finder
        npx playwright install --with-deps chromium
        
    - name: Build application
      run: |
        cd parking-finder
        npm run build
        
    - name: Run accessibility tests
      run: |
        cd parking-finder
        npx playwright test --grep "accessibility"

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'parking-finder/package-lock.json'
        
    - name: Install dependencies
      run: |
        cd parking-finder
        npm ci
        
    - name: Run security audit
      run: |
        cd parking-finder
        npm audit --audit-level=moderate
        
    - name: Run dependency check
      run: |
        cd parking-finder
        npx better-npm-audit audit

  lint-and-format:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'parking-finder/package-lock.json'
        
    - name: Install dependencies
      run: |
        cd parking-finder
        npm ci
        
    - name: Run ESLint
      run: |
        cd parking-finder
        npm run lint
        
    - name: Check TypeScript
      run: |
        cd parking-finder
        npx tsc --noEmit

  test-summary:
    if: always()
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests, performance-tests, e2e-tests, accessibility-tests, security-scan, lint-and-format]
    
    steps:
    - name: Test Summary
      run: |
        echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "| Test Type | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| Unit Tests | ${{ needs.unit-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Integration Tests | ${{ needs.integration-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Performance Tests | ${{ needs.performance-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| E2E Tests | ${{ needs.e2e-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Accessibility Tests | ${{ needs.accessibility-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Security Scan | ${{ needs.security-scan.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Lint & Format | ${{ needs.lint-and-format.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ needs.unit-tests.result }}" != "success" ] || 
           [ "${{ needs.integration-tests.result }}" != "success" ] || 
           [ "${{ needs.performance-tests.result }}" != "success" ] || 
           [ "${{ needs.e2e-tests.result }}" != "success" ] || 
           [ "${{ needs.accessibility-tests.result }}" != "success" ] || 
           [ "${{ needs.security-scan.result }}" != "success" ] || 
           [ "${{ needs.lint-and-format.result }}" != "success" ]; then
          echo "❌ Some tests failed"
          exit 1
        else
          echo "✅ All tests passed"
        fi